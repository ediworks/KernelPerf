<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>__free_one_page (1 samples, 0.11%)</title><rect x="871.2" y="37" width="1.3" height="15.0" fill="rgb(221,129,6)" rx="2" ry="2" />
<text  x="874.15" y="47.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.11%)</title><rect x="871.2" y="117" width="1.3" height="15.0" fill="rgb(215,0,41)" rx="2" ry="2" />
<text  x="874.15" y="127.5" ></text>
</g>
<g >
<title>_perf_event_enable (192 samples, 21.26%)</title><rect x="10.0" y="293" width="250.9" height="15.0" fill="rgb(247,20,22)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >_perf_event_enable</text>
</g>
<g >
<title>__fput (1 samples, 0.11%)</title><rect x="860.7" y="293" width="1.3" height="15.0" fill="rgb(239,53,54)" rx="2" ry="2" />
<text  x="863.70" y="303.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.11%)</title><rect x="855.5" y="165" width="1.3" height="15.0" fill="rgb(254,108,37)" rx="2" ry="2" />
<text  x="858.47" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="787.5" y="69" width="1.3" height="15.0" fill="rgb(246,37,52)" rx="2" ry="2" />
<text  x="790.52" y="79.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (1 samples, 0.11%)</title><rect x="871.2" y="69" width="1.3" height="15.0" fill="rgb(225,29,15)" rx="2" ry="2" />
<text  x="874.15" y="79.5" ></text>
</g>
<g >
<title>release_pages (27 samples, 2.99%)</title><rect x="788.8" y="197" width="35.3" height="15.0" fill="rgb(233,201,51)" rx="2" ry="2" />
<text  x="791.83" y="207.5" >re..</text>
</g>
<g >
<title>__schedule (1 samples, 0.11%)</title><rect x="1188.7" y="245" width="1.3" height="15.0" fill="rgb(218,206,26)" rx="2" ry="2" />
<text  x="1191.69" y="255.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.11%)</title><rect x="872.5" y="181" width="1.3" height="15.0" fill="rgb(247,124,37)" rx="2" ry="2" />
<text  x="875.46" y="191.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="855.5" y="181" width="1.3" height="15.0" fill="rgb(228,32,17)" rx="2" ry="2" />
<text  x="858.47" y="191.5" ></text>
</g>
<g >
<title>event_function (192 samples, 21.26%)</title><rect x="10.0" y="213" width="250.9" height="15.0" fill="rgb(232,138,19)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >event_function</text>
</g>
<g >
<title>unmap_vmas (4 samples, 0.44%)</title><rect x="1179.5" y="277" width="5.3" height="15.0" fill="rgb(216,49,11)" rx="2" ry="2" />
<text  x="1182.55" y="287.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (235 samples, 26.02%)</title><rect x="863.3" y="309" width="307.1" height="15.0" fill="rgb(226,70,32)" rx="2" ry="2" />
<text  x="866.31" y="319.5" >cpuidle_enter_state</text>
</g>
<g >
<title>vfs_read (3 samples, 0.33%)</title><rect x="852.9" y="341" width="3.9" height="15.0" fill="rgb(224,40,29)" rx="2" ry="2" />
<text  x="855.86" y="351.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (2 samples, 0.22%)</title><rect x="690.8" y="229" width="2.6" height="15.0" fill="rgb(207,51,15)" rx="2" ry="2" />
<text  x="693.82" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7 samples, 0.78%)</title><rect x="864.6" y="277" width="9.2" height="15.0" fill="rgb(209,50,46)" rx="2" ry="2" />
<text  x="867.62" y="287.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (4 samples, 0.44%)</title><rect x="1174.3" y="357" width="5.2" height="15.0" fill="rgb(214,92,33)" rx="2" ry="2" />
<text  x="1177.32" y="367.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.33%)</title><rect x="1184.8" y="341" width="3.9" height="15.0" fill="rgb(253,127,27)" rx="2" ry="2" />
<text  x="1187.77" y="351.5" ></text>
</g>
<g >
<title>PageHuge (2 samples, 0.22%)</title><rect x="685.6" y="229" width="2.6" height="15.0" fill="rgb(244,146,41)" rx="2" ry="2" />
<text  x="688.59" y="239.5" ></text>
</g>
<g >
<title>core_sys_select (1 samples, 0.11%)</title><rect x="1188.7" y="325" width="1.3" height="15.0" fill="rgb(215,113,43)" rx="2" ry="2" />
<text  x="1191.69" y="335.5" ></text>
</g>
<g >
<title>__activate_page (1 samples, 0.11%)</title><rect x="787.5" y="149" width="1.3" height="15.0" fill="rgb(206,22,30)" rx="2" ry="2" />
<text  x="790.52" y="159.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.44%)</title><rect x="1179.5" y="261" width="5.3" height="15.0" fill="rgb(233,24,26)" rx="2" ry="2" />
<text  x="1182.55" y="271.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="1184.8" y="293" width="1.3" height="15.0" fill="rgb(253,123,26)" rx="2" ry="2" />
<text  x="1187.77" y="303.5" ></text>
</g>
<g >
<title>hash_futex (1 samples, 0.11%)</title><rect x="1186.1" y="309" width="1.3" height="15.0" fill="rgb(244,107,17)" rx="2" ry="2" />
<text  x="1189.08" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.44%)</title><rect x="868.5" y="245" width="5.3" height="15.0" fill="rgb(216,207,17)" rx="2" ry="2" />
<text  x="871.54" y="255.5" ></text>
</g>
<g >
<title>remove_entity_load_avg (1 samples, 0.11%)</title><rect x="869.8" y="117" width="1.4" height="15.0" fill="rgb(230,150,4)" rx="2" ry="2" />
<text  x="872.84" y="127.5" ></text>
</g>
<g >
<title>perf (192 samples, 21.26%)</title><rect x="10.0" y="405" width="250.9" height="15.0" fill="rgb(230,69,13)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >perf</text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.11%)</title><rect x="1188.7" y="213" width="1.3" height="15.0" fill="rgb(205,26,11)" rx="2" ry="2" />
<text  x="1191.69" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.33%)</title><rect x="864.6" y="229" width="3.9" height="15.0" fill="rgb(236,25,24)" rx="2" ry="2" />
<text  x="867.62" y="239.5" ></text>
</g>
<g >
<title>__free_one_page (3 samples, 0.33%)</title><rect x="274.0" y="117" width="3.9" height="15.0" fill="rgb(206,225,1)" rx="2" ry="2" />
<text  x="276.96" y="127.5" ></text>
</g>
<g >
<title>remote_function (192 samples, 21.26%)</title><rect x="10.0" y="229" width="250.9" height="15.0" fill="rgb(232,229,4)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >remote_function</text>
</g>
<g >
<title>__do_sys_wait4 (1 samples, 0.11%)</title><rect x="859.4" y="341" width="1.3" height="15.0" fill="rgb(247,71,50)" rx="2" ry="2" />
<text  x="862.39" y="351.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.11%)</title><rect x="872.5" y="213" width="1.3" height="15.0" fill="rgb(205,52,15)" rx="2" ry="2" />
<text  x="875.46" y="223.5" ></text>
</g>
<g >
<title>arch_call_rest_init (4 samples, 0.44%)</title><rect x="1174.3" y="325" width="5.2" height="15.0" fill="rgb(232,40,43)" rx="2" ry="2" />
<text  x="1177.32" y="335.5" ></text>
</g>
<g >
<title>free_pgtables (16 samples, 1.77%)</title><rect x="262.2" y="277" width="20.9" height="15.0" fill="rgb(236,150,28)" rx="2" ry="2" />
<text  x="265.20" y="287.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.11%)</title><rect x="1187.4" y="277" width="1.3" height="15.0" fill="rgb(211,192,14)" rx="2" ry="2" />
<text  x="1190.39" y="287.5" ></text>
</g>
<g >
<title>do_group_exit (4 samples, 0.44%)</title><rect x="1179.5" y="341" width="5.3" height="15.0" fill="rgb(246,168,43)" rx="2" ry="2" />
<text  x="1182.55" y="351.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (2 samples, 0.22%)</title><rect x="856.8" y="309" width="2.6" height="15.0" fill="rgb(249,102,3)" rx="2" ry="2" />
<text  x="859.78" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (459 samples, 50.83%)</title><rect x="262.2" y="389" width="599.8" height="15.0" fill="rgb(234,39,10)" rx="2" ry="2" />
<text  x="265.20" y="399.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>cpuidle_not_available (1 samples, 0.11%)</title><rect x="862.0" y="341" width="1.3" height="15.0" fill="rgb(245,178,46)" rx="2" ry="2" />
<text  x="865.00" y="351.5" ></text>
</g>
<g >
<title>sched_offline_group (1 samples, 0.11%)</title><rect x="869.8" y="149" width="1.4" height="15.0" fill="rgb(243,135,51)" rx="2" ry="2" />
<text  x="872.84" y="159.5" ></text>
</g>
<g >
<title>postgres (460 samples, 50.94%)</title><rect x="260.9" y="405" width="601.1" height="15.0" fill="rgb(232,133,42)" rx="2" ry="2" />
<text  x="263.90" y="415.5" >postgres</text>
</g>
<g >
<title>__perf_event_enable (192 samples, 21.26%)</title><rect x="10.0" y="197" width="250.9" height="15.0" fill="rgb(230,151,25)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >__perf_event_enable</text>
</g>
<g >
<title>ctx_resched (192 samples, 21.26%)</title><rect x="10.0" y="181" width="250.9" height="15.0" fill="rgb(233,220,40)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >ctx_resched</text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (1 samples, 0.11%)</title><rect x="283.1" y="213" width="1.3" height="15.0" fill="rgb(251,87,13)" rx="2" ry="2" />
<text  x="286.11" y="223.5" ></text>
</g>
<g >
<title>free_swap_cache (2 samples, 0.22%)</title><rect x="284.4" y="261" width="2.6" height="15.0" fill="rgb(243,12,52)" rx="2" ry="2" />
<text  x="287.42" y="271.5" ></text>
</g>
<g >
<title>lock_page_memcg (2 samples, 0.22%)</title><rect x="771.8" y="213" width="2.7" height="15.0" fill="rgb(242,118,9)" rx="2" ry="2" />
<text  x="774.84" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.11%)</title><rect x="865.9" y="197" width="1.3" height="15.0" fill="rgb(206,64,46)" rx="2" ry="2" />
<text  x="868.92" y="207.5" ></text>
</g>
<g >
<title>all (903 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(253,153,38)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (1 samples, 0.11%)</title><rect x="854.2" y="133" width="1.3" height="15.0" fill="rgb(208,200,35)" rx="2" ry="2" />
<text  x="857.16" y="143.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.22%)</title><rect x="856.8" y="341" width="2.6" height="15.0" fill="rgb(247,190,40)" rx="2" ry="2" />
<text  x="859.78" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.11%)</title><rect x="271.4" y="197" width="1.3" height="15.0" fill="rgb(224,212,50)" rx="2" ry="2" />
<text  x="274.35" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.11%)</title><rect x="865.9" y="181" width="1.3" height="15.0" fill="rgb(243,3,12)" rx="2" ry="2" />
<text  x="868.92" y="191.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (3 samples, 0.33%)</title><rect x="852.9" y="309" width="3.9" height="15.0" fill="rgb(226,218,20)" rx="2" ry="2" />
<text  x="855.86" y="319.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (227 samples, 25.14%)</title><rect x="873.8" y="293" width="296.6" height="15.0" fill="rgb(219,107,25)" rx="2" ry="2" />
<text  x="876.77" y="303.5" >mwait_idle_with_hints.constprop.0</text>
</g>
<g >
<title>tlb_finish_mmu (3 samples, 0.33%)</title><rect x="283.1" y="277" width="3.9" height="15.0" fill="rgb(229,169,28)" rx="2" ry="2" />
<text  x="286.11" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.44%)</title><rect x="287.0" y="245" width="5.3" height="15.0" fill="rgb(235,13,51)" rx="2" ry="2" />
<text  x="290.03" y="255.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.11%)</title><rect x="1188.7" y="165" width="1.3" height="15.0" fill="rgb(205,26,33)" rx="2" ry="2" />
<text  x="1191.69" y="175.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (4 samples, 0.44%)</title><rect x="1174.3" y="373" width="5.2" height="15.0" fill="rgb(244,29,21)" rx="2" ry="2" />
<text  x="1177.32" y="383.5" ></text>
</g>
<g >
<title>unlock_page_memcg (3 samples, 0.33%)</title><rect x="774.5" y="213" width="3.9" height="15.0" fill="rgb(211,126,19)" rx="2" ry="2" />
<text  x="777.45" y="223.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.11%)</title><rect x="1184.8" y="309" width="1.3" height="15.0" fill="rgb(228,138,53)" rx="2" ry="2" />
<text  x="1187.77" y="319.5" ></text>
</g>
<g >
<title>workingset_refault (2 samples, 0.22%)</title><rect x="852.9" y="181" width="2.6" height="15.0" fill="rgb(234,158,21)" rx="2" ry="2" />
<text  x="855.86" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4 samples, 0.44%)</title><rect x="868.5" y="261" width="5.3" height="15.0" fill="rgb(235,43,46)" rx="2" ry="2" />
<text  x="871.54" y="271.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.11%)</title><rect x="787.5" y="133" width="1.3" height="15.0" fill="rgb(248,40,47)" rx="2" ry="2" />
<text  x="790.52" y="143.5" ></text>
</g>
<g >
<title>__common_interrupt (1 samples, 0.11%)</title><rect x="863.3" y="261" width="1.3" height="15.0" fill="rgb(249,130,53)" rx="2" ry="2" />
<text  x="866.31" y="271.5" ></text>
</g>
<g >
<title>cpuidle_enter (4 samples, 0.44%)</title><rect x="1174.3" y="261" width="5.2" height="15.0" fill="rgb(253,74,37)" rx="2" ry="2" />
<text  x="1177.32" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (192 samples, 21.26%)</title><rect x="10.0" y="389" width="250.9" height="15.0" fill="rgb(253,196,54)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>smp_call_function_single (192 samples, 21.26%)</title><rect x="10.0" y="261" width="250.9" height="15.0" fill="rgb(245,152,34)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >smp_call_function_single</text>
</g>
<g >
<title>release_pages (6 samples, 0.66%)</title><rect x="274.0" y="181" width="7.8" height="15.0" fill="rgb(225,222,14)" rx="2" ry="2" />
<text  x="276.96" y="191.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.11%)</title><rect x="1188.7" y="149" width="1.3" height="15.0" fill="rgb(216,171,44)" rx="2" ry="2" />
<text  x="1191.69" y="159.5" ></text>
</g>
<g >
<title>page_cache_sync_ra (2 samples, 0.22%)</title><rect x="852.9" y="245" width="2.6" height="15.0" fill="rgb(238,91,43)" rx="2" ry="2" />
<text  x="855.86" y="255.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (1 samples, 0.11%)</title><rect x="856.8" y="229" width="1.3" height="15.0" fill="rgb(221,70,23)" rx="2" ry="2" />
<text  x="859.78" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="869.8" y="101" width="1.4" height="15.0" fill="rgb(251,190,8)" rx="2" ry="2" />
<text  x="872.84" y="111.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.11%)</title><rect x="283.1" y="261" width="1.3" height="15.0" fill="rgb(210,37,54)" rx="2" ry="2" />
<text  x="286.11" y="271.5" ></text>
</g>
<g >
<title>___pte_free_tlb (13 samples, 1.44%)</title><rect x="266.1" y="245" width="17.0" height="15.0" fill="rgb(230,14,1)" rx="2" ry="2" />
<text  x="269.12" y="255.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.11%)</title><rect x="283.1" y="245" width="1.3" height="15.0" fill="rgb(230,28,15)" rx="2" ry="2" />
<text  x="286.11" y="255.5" ></text>
</g>
<g >
<title>set_page_dirty (4 samples, 0.44%)</title><rect x="778.4" y="229" width="5.2" height="15.0" fill="rgb(214,65,19)" rx="2" ry="2" />
<text  x="781.37" y="239.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.11%)</title><rect x="1187.4" y="325" width="1.3" height="15.0" fill="rgb(225,101,28)" rx="2" ry="2" />
<text  x="1190.39" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.22%)</title><rect x="865.9" y="213" width="2.6" height="15.0" fill="rgb(231,137,7)" rx="2" ry="2" />
<text  x="868.92" y="223.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.44%)</title><rect x="1179.5" y="245" width="5.3" height="15.0" fill="rgb(224,172,38)" rx="2" ry="2" />
<text  x="1182.55" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.22%)</title><rect x="821.5" y="181" width="2.6" height="15.0" fill="rgb(233,44,51)" rx="2" ry="2" />
<text  x="824.50" y="191.5" ></text>
</g>
<g >
<title>unlock_page_memcg (4 samples, 0.44%)</title><rect x="842.4" y="229" width="5.2" height="15.0" fill="rgb(235,54,42)" rx="2" ry="2" />
<text  x="845.40" y="239.5" ></text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (2 samples, 0.22%)</title><rect x="270.0" y="229" width="2.7" height="15.0" fill="rgb(246,31,35)" rx="2" ry="2" />
<text  x="273.04" y="239.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.11%)</title><rect x="283.1" y="197" width="1.3" height="15.0" fill="rgb(242,164,31)" rx="2" ry="2" />
<text  x="286.11" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (191 samples, 21.15%)</title><rect x="11.3" y="133" width="249.6" height="15.0" fill="rgb(219,133,17)" rx="2" ry="2" />
<text  x="14.31" y="143.5" >native_write_msr</text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.22%)</title><rect x="293.6" y="245" width="2.6" height="15.0" fill="rgb(226,194,42)" rx="2" ry="2" />
<text  x="296.57" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (452 samples, 50.06%)</title><rect x="262.2" y="357" width="590.7" height="15.0" fill="rgb(214,45,13)" rx="2" ry="2" />
<text  x="265.20" y="367.5" >__x64_sys_exit_group</text>
</g>
<g >
<title>do_idle (4 samples, 0.44%)</title><rect x="1174.3" y="277" width="5.2" height="15.0" fill="rgb(232,25,16)" rx="2" ry="2" />
<text  x="1177.32" y="287.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="1188.7" y="261" width="1.3" height="15.0" fill="rgb(209,117,12)" rx="2" ry="2" />
<text  x="1191.69" y="271.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.11%)</title><rect x="864.6" y="213" width="1.3" height="15.0" fill="rgb(230,145,48)" rx="2" ry="2" />
<text  x="867.62" y="223.5" ></text>
</g>
<g >
<title>filemap_read (3 samples, 0.33%)</title><rect x="852.9" y="277" width="3.9" height="15.0" fill="rgb(216,161,0)" rx="2" ry="2" />
<text  x="855.86" y="287.5" ></text>
</g>
<g >
<title>free_unref_page_list (6 samples, 0.66%)</title><rect x="274.0" y="165" width="7.8" height="15.0" fill="rgb(252,0,4)" rx="2" ry="2" />
<text  x="276.96" y="175.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (2 samples, 0.22%)</title><rect x="852.9" y="213" width="2.6" height="15.0" fill="rgb(224,110,31)" rx="2" ry="2" />
<text  x="855.86" y="223.5" ></text>
</g>
<g >
<title>exit_mmap (452 samples, 50.06%)</title><rect x="262.2" y="293" width="590.7" height="15.0" fill="rgb(225,22,42)" rx="2" ry="2" />
<text  x="265.20" y="303.5" >exit_mmap</text>
</g>
<g >
<title>tlb_flush_mmu (45 samples, 4.98%)</title><rect x="783.6" y="229" width="58.8" height="15.0" fill="rgb(241,97,47)" rx="2" ry="2" />
<text  x="786.60" y="239.5" >tlb_fl..</text>
</g>
<g >
<title>cpuidle_enter_state (4 samples, 0.44%)</title><rect x="1174.3" y="245" width="5.2" height="15.0" fill="rgb(220,155,51)" rx="2" ry="2" />
<text  x="1177.32" y="255.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.11%)</title><rect x="271.4" y="181" width="1.3" height="15.0" fill="rgb(232,38,52)" rx="2" ry="2" />
<text  x="274.35" y="191.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.11%)</title><rect x="871.2" y="149" width="1.3" height="15.0" fill="rgb(214,117,2)" rx="2" ry="2" />
<text  x="874.15" y="159.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.22%)</title><rect x="1184.8" y="325" width="2.6" height="15.0" fill="rgb(253,145,42)" rx="2" ry="2" />
<text  x="1187.77" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.33%)</title><rect x="1180.9" y="181" width="3.9" height="15.0" fill="rgb(251,66,20)" rx="2" ry="2" />
<text  x="1183.85" y="191.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.11%)</title><rect x="292.3" y="245" width="1.3" height="15.0" fill="rgb(244,198,33)" rx="2" ry="2" />
<text  x="295.26" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.11%)</title><rect x="865.9" y="165" width="1.3" height="15.0" fill="rgb(236,125,39)" rx="2" ry="2" />
<text  x="868.92" y="175.5" ></text>
</g>
<g >
<title>swapper (243 samples, 26.91%)</title><rect x="862.0" y="405" width="317.5" height="15.0" fill="rgb(230,199,30)" rx="2" ry="2" />
<text  x="865.00" y="415.5" >swapper</text>
</g>
<g >
<title>tick_nohz_idle_retain_tick (1 samples, 0.11%)</title><rect x="1173.0" y="341" width="1.3" height="15.0" fill="rgb(211,114,18)" rx="2" ry="2" />
<text  x="1176.01" y="351.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.11%)</title><rect x="871.2" y="133" width="1.3" height="15.0" fill="rgb(220,134,4)" rx="2" ry="2" />
<text  x="874.15" y="143.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.11%)</title><rect x="1187.4" y="309" width="1.3" height="15.0" fill="rgb(229,80,29)" rx="2" ry="2" />
<text  x="1190.39" y="319.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (3 samples, 0.33%)</title><rect x="277.9" y="101" width="3.9" height="15.0" fill="rgb(214,89,23)" rx="2" ry="2" />
<text  x="280.88" y="111.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.11%)</title><rect x="1188.7" y="293" width="1.3" height="15.0" fill="rgb(241,190,36)" rx="2" ry="2" />
<text  x="1191.69" y="303.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.11%)</title><rect x="872.5" y="197" width="1.3" height="15.0" fill="rgb(234,11,49)" rx="2" ry="2" />
<text  x="875.46" y="207.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (2 samples, 0.22%)</title><rect x="852.9" y="197" width="2.6" height="15.0" fill="rgb(217,197,38)" rx="2" ry="2" />
<text  x="855.86" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.11%)</title><rect x="867.2" y="197" width="1.3" height="15.0" fill="rgb(245,146,21)" rx="2" ry="2" />
<text  x="870.23" y="207.5" ></text>
</g>
<g >
<title>generic_file_read_iter (3 samples, 0.33%)</title><rect x="852.9" y="293" width="3.9" height="15.0" fill="rgb(212,160,15)" rx="2" ry="2" />
<text  x="855.86" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (3 samples, 0.33%)</title><rect x="852.9" y="357" width="3.9" height="15.0" fill="rgb(243,68,48)" rx="2" ry="2" />
<text  x="855.86" y="367.5" ></text>
</g>
<g >
<title>PageHuge (3 samples, 0.33%)</title><rect x="767.9" y="213" width="3.9" height="15.0" fill="rgb(225,148,21)" rx="2" ry="2" />
<text  x="770.92" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (191 samples, 21.15%)</title><rect x="11.3" y="165" width="249.6" height="15.0" fill="rgb(215,225,8)" rx="2" ry="2" />
<text  x="14.31" y="175.5" >x86_pmu_enable</text>
</g>
<g >
<title>_perf_ioctl (192 samples, 21.26%)</title><rect x="10.0" y="325" width="250.9" height="15.0" fill="rgb(250,196,27)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >_perf_ioctl</text>
</g>
<g >
<title>free_swap_cache (1 samples, 0.11%)</title><rect x="281.8" y="197" width="1.3" height="15.0" fill="rgb(253,187,23)" rx="2" ry="2" />
<text  x="284.81" y="207.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.11%)</title><rect x="1188.7" y="229" width="1.3" height="15.0" fill="rgb(218,34,15)" rx="2" ry="2" />
<text  x="1191.69" y="239.5" ></text>
</g>
<g >
<title>event_function_call (192 samples, 21.26%)</title><rect x="10.0" y="277" width="250.9" height="15.0" fill="rgb(222,152,24)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >event_function_call</text>
</g>
<g >
<title>__entry_text_start (1 samples, 0.11%)</title><rect x="260.9" y="389" width="1.3" height="15.0" fill="rgb(207,43,13)" rx="2" ry="2" />
<text  x="263.90" y="399.5" ></text>
</g>
<g >
<title>unregister_fair_sched_group (1 samples, 0.11%)</title><rect x="869.8" y="133" width="1.4" height="15.0" fill="rgb(242,183,41)" rx="2" ry="2" />
<text  x="872.84" y="143.5" ></text>
</g>
<g >
<title>free_pgd_range (16 samples, 1.77%)</title><rect x="262.2" y="261" width="20.9" height="15.0" fill="rgb(212,114,23)" rx="2" ry="2" />
<text  x="265.20" y="271.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.33%)</title><rect x="1180.9" y="213" width="3.9" height="15.0" fill="rgb(241,29,32)" rx="2" ry="2" />
<text  x="1183.85" y="223.5" ></text>
</g>
<g >
<title>mmput (452 samples, 50.06%)</title><rect x="262.2" y="309" width="590.7" height="15.0" fill="rgb(206,115,22)" rx="2" ry="2" />
<text  x="265.20" y="319.5" >mmput</text>
</g>
<g >
<title>free_swap_cache (14 samples, 1.55%)</title><rect x="824.1" y="213" width="18.3" height="15.0" fill="rgb(219,145,18)" rx="2" ry="2" />
<text  x="827.11" y="223.5" ></text>
</g>
<g >
<title>cpu_startup_entry (239 samples, 26.47%)</title><rect x="862.0" y="357" width="312.3" height="15.0" fill="rgb(214,193,13)" rx="2" ry="2" />
<text  x="865.00" y="367.5" >cpu_startup_entry</text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.33%)</title><rect x="277.9" y="117" width="3.9" height="15.0" fill="rgb(243,115,10)" rx="2" ry="2" />
<text  x="280.88" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="852.9" y="133" width="1.3" height="15.0" fill="rgb(208,112,39)" rx="2" ry="2" />
<text  x="855.86" y="143.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.33%)</title><rect x="1180.9" y="229" width="3.9" height="15.0" fill="rgb(205,76,45)" rx="2" ry="2" />
<text  x="1183.85" y="239.5" ></text>
</g>
<g >
<title>__put_task_struct (1 samples, 0.11%)</title><rect x="869.8" y="181" width="1.4" height="15.0" fill="rgb(230,163,8)" rx="2" ry="2" />
<text  x="872.84" y="191.5" ></text>
</g>
<g >
<title>rcu_core (3 samples, 0.33%)</title><rect x="868.5" y="213" width="4.0" height="15.0" fill="rgb(234,227,53)" rx="2" ry="2" />
<text  x="871.54" y="223.5" ></text>
</g>
<g >
<title>__d_free (1 samples, 0.11%)</title><rect x="868.5" y="197" width="1.3" height="15.0" fill="rgb(230,139,7)" rx="2" ry="2" />
<text  x="871.54" y="207.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.11%)</title><rect x="787.5" y="85" width="1.3" height="15.0" fill="rgb(251,97,9)" rx="2" ry="2" />
<text  x="790.52" y="95.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.11%)</title><rect x="863.3" y="277" width="1.3" height="15.0" fill="rgb(207,194,39)" rx="2" ry="2" />
<text  x="866.31" y="287.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.33%)</title><rect x="852.9" y="325" width="3.9" height="15.0" fill="rgb(210,75,43)" rx="2" ry="2" />
<text  x="855.86" y="335.5" ></text>
</g>
<g >
<title>do_exit (4 samples, 0.44%)</title><rect x="1179.5" y="325" width="5.3" height="15.0" fill="rgb(205,43,33)" rx="2" ry="2" />
<text  x="1182.55" y="335.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (243 samples, 26.91%)</title><rect x="862.0" y="389" width="317.5" height="15.0" fill="rgb(210,69,48)" rx="2" ry="2" />
<text  x="865.00" y="399.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.11%)</title><rect x="871.2" y="53" width="1.3" height="15.0" fill="rgb(252,136,53)" rx="2" ry="2" />
<text  x="874.15" y="63.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (4 samples, 0.44%)</title><rect x="1179.5" y="357" width="5.3" height="15.0" fill="rgb(253,140,21)" rx="2" ry="2" />
<text  x="1182.55" y="367.5" ></text>
</g>
<g >
<title>nvme_irq (1 samples, 0.11%)</title><rect x="863.3" y="213" width="1.3" height="15.0" fill="rgb(227,33,14)" rx="2" ry="2" />
<text  x="866.31" y="223.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (1 samples, 0.11%)</title><rect x="856.8" y="213" width="1.3" height="15.0" fill="rgb(248,104,23)" rx="2" ry="2" />
<text  x="859.78" y="223.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (6 samples, 0.66%)</title><rect x="274.0" y="149" width="7.8" height="15.0" fill="rgb(218,68,22)" rx="2" ry="2" />
<text  x="276.96" y="159.5" ></text>
</g>
<g >
<title>start_kernel (4 samples, 0.44%)</title><rect x="1174.3" y="341" width="5.2" height="15.0" fill="rgb(245,51,43)" rx="2" ry="2" />
<text  x="1177.32" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (6 samples, 0.66%)</title><rect x="274.0" y="197" width="7.8" height="15.0" fill="rgb(211,119,25)" rx="2" ry="2" />
<text  x="276.96" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.33%)</title><rect x="864.6" y="245" width="3.9" height="15.0" fill="rgb(236,186,51)" rx="2" ry="2" />
<text  x="867.62" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (1 samples, 0.11%)</title><rect x="854.2" y="117" width="1.3" height="15.0" fill="rgb(246,161,50)" rx="2" ry="2" />
<text  x="857.16" y="127.5" ></text>
</g>
<g >
<title>unmap_page_range (426 samples, 47.18%)</title><rect x="296.2" y="245" width="556.7" height="15.0" fill="rgb(223,205,42)" rx="2" ry="2" />
<text  x="299.18" y="255.5" >unmap_page_range</text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.11%)</title><rect x="863.3" y="293" width="1.3" height="15.0" fill="rgb(246,141,14)" rx="2" ry="2" />
<text  x="866.31" y="303.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (2 samples, 0.22%)</title><rect x="786.2" y="181" width="2.6" height="15.0" fill="rgb(231,210,15)" rx="2" ry="2" />
<text  x="789.21" y="191.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.11%)</title><rect x="856.8" y="245" width="1.3" height="15.0" fill="rgb(242,165,8)" rx="2" ry="2" />
<text  x="859.78" y="255.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.22%)</title><rect x="821.5" y="149" width="2.6" height="15.0" fill="rgb(217,213,31)" rx="2" ry="2" />
<text  x="824.50" y="159.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.11%)</title><rect x="1183.5" y="149" width="1.3" height="15.0" fill="rgb(246,163,40)" rx="2" ry="2" />
<text  x="1186.47" y="159.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.22%)</title><rect x="786.2" y="165" width="2.6" height="15.0" fill="rgb(248,197,52)" rx="2" ry="2" />
<text  x="789.21" y="175.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2 samples, 0.22%)</title><rect x="856.8" y="293" width="2.6" height="15.0" fill="rgb(209,98,4)" rx="2" ry="2" />
<text  x="859.78" y="303.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.11%)</title><rect x="1188.7" y="277" width="1.3" height="15.0" fill="rgb(246,76,2)" rx="2" ry="2" />
<text  x="1191.69" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (4 samples, 0.44%)</title><rect x="1174.3" y="229" width="5.2" height="15.0" fill="rgb(233,172,3)" rx="2" ry="2" />
<text  x="1177.32" y="239.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.11%)</title><rect x="865.9" y="149" width="1.3" height="15.0" fill="rgb(206,101,45)" rx="2" ry="2" />
<text  x="868.92" y="159.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.11%)</title><rect x="822.8" y="133" width="1.3" height="15.0" fill="rgb(216,61,2)" rx="2" ry="2" />
<text  x="825.80" y="143.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.22%)</title><rect x="856.8" y="325" width="2.6" height="15.0" fill="rgb(253,71,8)" rx="2" ry="2" />
<text  x="859.78" y="335.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1 samples, 0.11%)</title><rect x="858.1" y="245" width="1.3" height="15.0" fill="rgb(211,72,45)" rx="2" ry="2" />
<text  x="861.08" y="255.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.11%)</title><rect x="271.4" y="165" width="1.3" height="15.0" fill="rgb(238,121,31)" rx="2" ry="2" />
<text  x="274.35" y="175.5" ></text>
</g>
<g >
<title>filemap_get_pages (3 samples, 0.33%)</title><rect x="852.9" y="261" width="3.9" height="15.0" fill="rgb(218,41,21)" rx="2" ry="2" />
<text  x="855.86" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_pselect6 (1 samples, 0.11%)</title><rect x="1188.7" y="357" width="1.3" height="15.0" fill="rgb(251,2,35)" rx="2" ry="2" />
<text  x="1191.69" y="367.5" ></text>
</g>
<g >
<title>vm_normal_page (4 samples, 0.44%)</title><rect x="847.6" y="229" width="5.3" height="15.0" fill="rgb(235,216,24)" rx="2" ry="2" />
<text  x="850.63" y="239.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (1 samples, 0.11%)</title><rect x="1171.7" y="293" width="1.3" height="15.0" fill="rgb(221,193,11)" rx="2" ry="2" />
<text  x="1174.71" y="303.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (1 samples, 0.11%)</title><rect x="1183.5" y="165" width="1.3" height="15.0" fill="rgb(223,49,14)" rx="2" ry="2" />
<text  x="1186.47" y="175.5" ></text>
</g>
<g >
<title>mark_page_accessed (8 samples, 0.89%)</title><rect x="694.7" y="229" width="10.5" height="15.0" fill="rgb(251,129,50)" rx="2" ry="2" />
<text  x="697.74" y="239.5" ></text>
</g>
<g >
<title>__set_page_dirty_no_writeback (2 samples, 0.22%)</title><rect x="688.2" y="229" width="2.6" height="15.0" fill="rgb(238,42,3)" rx="2" ry="2" />
<text  x="691.21" y="239.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.33%)</title><rect x="1180.9" y="197" width="3.9" height="15.0" fill="rgb(254,172,42)" rx="2" ry="2" />
<text  x="1183.85" y="207.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.11%)</title><rect x="1170.4" y="293" width="1.3" height="15.0" fill="rgb(208,117,49)" rx="2" ry="2" />
<text  x="1173.40" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_wait4 (1 samples, 0.11%)</title><rect x="859.4" y="357" width="1.3" height="15.0" fill="rgb(208,124,3)" rx="2" ry="2" />
<text  x="862.39" y="367.5" ></text>
</g>
<g >
<title>free_unref_page (1 samples, 0.11%)</title><rect x="871.2" y="85" width="1.3" height="15.0" fill="rgb(219,88,26)" rx="2" ry="2" />
<text  x="874.15" y="95.5" ></text>
</g>
<g >
<title>perf_ioctl (192 samples, 21.26%)</title><rect x="10.0" y="341" width="250.9" height="15.0" fill="rgb(226,49,28)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >perf_ioctl</text>
</g>
<g >
<title>__free_one_page (1 samples, 0.11%)</title><rect x="1183.5" y="133" width="1.3" height="15.0" fill="rgb(240,109,32)" rx="2" ry="2" />
<text  x="1186.47" y="143.5" ></text>
</g>
<g >
<title>do_group_exit (452 samples, 50.06%)</title><rect x="262.2" y="341" width="590.7" height="15.0" fill="rgb(230,223,7)" rx="2" ry="2" />
<text  x="265.20" y="351.5" >do_group_exit</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="283.1" y="181" width="1.3" height="15.0" fill="rgb(207,185,45)" rx="2" ry="2" />
<text  x="286.11" y="191.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (2 samples, 0.22%)</title><rect x="852.9" y="149" width="2.6" height="15.0" fill="rgb(213,77,29)" rx="2" ry="2" />
<text  x="855.86" y="159.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.11%)</title><rect x="855.5" y="149" width="1.3" height="15.0" fill="rgb(252,107,11)" rx="2" ry="2" />
<text  x="858.47" y="159.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4 samples, 0.44%)</title><rect x="1174.3" y="293" width="5.2" height="15.0" fill="rgb(240,154,40)" rx="2" ry="2" />
<text  x="1177.32" y="303.5" ></text>
</g>
<g >
<title>schedule_idle (2 samples, 0.22%)</title><rect x="1170.4" y="325" width="2.6" height="15.0" fill="rgb(212,48,45)" rx="2" ry="2" />
<text  x="1173.40" y="335.5" ></text>
</g>
<g >
<title>ondemand_readahead (2 samples, 0.22%)</title><rect x="852.9" y="229" width="2.6" height="15.0" fill="rgb(210,182,52)" rx="2" ry="2" />
<text  x="855.86" y="239.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.11%)</title><rect x="283.1" y="229" width="1.3" height="15.0" fill="rgb(251,125,30)" rx="2" ry="2" />
<text  x="286.11" y="239.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (7 samples, 0.78%)</title><rect x="274.0" y="213" width="9.1" height="15.0" fill="rgb(224,86,41)" rx="2" ry="2" />
<text  x="276.96" y="223.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.11%)</title><rect x="1188.7" y="197" width="1.3" height="15.0" fill="rgb(213,155,14)" rx="2" ry="2" />
<text  x="1191.69" y="207.5" ></text>
</g>
<g >
<title>io_schedule (1 samples, 0.11%)</title><rect x="855.5" y="229" width="1.3" height="15.0" fill="rgb(242,47,6)" rx="2" ry="2" />
<text  x="858.47" y="239.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.11%)</title><rect x="283.1" y="165" width="1.3" height="15.0" fill="rgb(212,190,21)" rx="2" ry="2" />
<text  x="286.11" y="175.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (2 samples, 0.22%)</title><rect x="821.5" y="165" width="2.6" height="15.0" fill="rgb(251,216,53)" rx="2" ry="2" />
<text  x="824.50" y="175.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (192 samples, 21.26%)</title><rect x="10.0" y="309" width="250.9" height="15.0" fill="rgb(207,17,27)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >perf_event_for_each_child</text>
</g>
<g >
<title>start_secondary (239 samples, 26.47%)</title><rect x="862.0" y="373" width="312.3" height="15.0" fill="rgb(216,5,43)" rx="2" ry="2" />
<text  x="865.00" y="383.5" >start_secondary</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7 samples, 0.78%)</title><rect x="864.6" y="293" width="9.2" height="15.0" fill="rgb(244,160,1)" rx="2" ry="2" />
<text  x="867.62" y="303.5" ></text>
</g>
<g >
<title>sched_autogroup_exit (1 samples, 0.11%)</title><rect x="869.8" y="165" width="1.4" height="15.0" fill="rgb(226,37,14)" rx="2" ry="2" />
<text  x="872.84" y="175.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.11%)</title><rect x="860.7" y="357" width="1.3" height="15.0" fill="rgb(211,160,54)" rx="2" ry="2" />
<text  x="863.70" y="367.5" ></text>
</g>
<g >
<title>do_idle (237 samples, 26.25%)</title><rect x="863.3" y="341" width="309.7" height="15.0" fill="rgb(246,57,5)" rx="2" ry="2" />
<text  x="866.31" y="351.5" >do_idle</text>
</g>
<g >
<title>workingset_activation (1 samples, 0.11%)</title><rect x="703.9" y="213" width="1.3" height="15.0" fill="rgb(220,181,43)" rx="2" ry="2" />
<text  x="706.89" y="223.5" ></text>
</g>
<g >
<title>delayed_put_task_struct (1 samples, 0.11%)</title><rect x="869.8" y="197" width="1.4" height="15.0" fill="rgb(227,139,28)" rx="2" ry="2" />
<text  x="872.84" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3 samples, 0.33%)</title><rect x="864.6" y="261" width="3.9" height="15.0" fill="rgb(254,82,9)" rx="2" ry="2" />
<text  x="867.62" y="271.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.11%)</title><rect x="782.3" y="213" width="1.3" height="15.0" fill="rgb(236,172,35)" rx="2" ry="2" />
<text  x="785.29" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_pwrite64 (2 samples, 0.22%)</title><rect x="856.8" y="357" width="2.6" height="15.0" fill="rgb(236,197,9)" rx="2" ry="2" />
<text  x="859.78" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_flush_stats (2 samples, 0.22%)</title><rect x="852.9" y="165" width="2.6" height="15.0" fill="rgb(225,120,20)" rx="2" ry="2" />
<text  x="855.86" y="175.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (1 samples, 0.11%)</title><rect x="858.1" y="213" width="1.3" height="15.0" fill="rgb(238,56,20)" rx="2" ry="2" />
<text  x="861.08" y="223.5" ></text>
</g>
<g >
<title>do_select (1 samples, 0.11%)</title><rect x="1188.7" y="309" width="1.3" height="15.0" fill="rgb(244,115,13)" rx="2" ry="2" />
<text  x="1191.69" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.11%)</title><rect x="860.7" y="341" width="1.3" height="15.0" fill="rgb(232,18,10)" rx="2" ry="2" />
<text  x="863.70" y="351.5" ></text>
</g>
<g >
<title>unmap_single_vma (433 samples, 47.95%)</title><rect x="287.0" y="261" width="565.9" height="15.0" fill="rgb(228,126,12)" rx="2" ry="2" />
<text  x="290.03" y="271.5" >unmap_single_vma</text>
</g>
<g >
<title>generic_exec_single (192 samples, 21.26%)</title><rect x="10.0" y="245" width="250.9" height="15.0" fill="rgb(235,156,50)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >generic_exec_single</text>
</g>
<g >
<title>do_pselect.constprop.0 (1 samples, 0.11%)</title><rect x="1188.7" y="341" width="1.3" height="15.0" fill="rgb(208,142,54)" rx="2" ry="2" />
<text  x="1191.69" y="351.5" ></text>
</g>
<g >
<title>wait_on_page_bit_common (1 samples, 0.11%)</title><rect x="855.5" y="245" width="1.3" height="15.0" fill="rgb(215,224,3)" rx="2" ry="2" />
<text  x="858.47" y="255.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.11%)</title><rect x="855.5" y="197" width="1.3" height="15.0" fill="rgb(224,3,42)" rx="2" ry="2" />
<text  x="858.47" y="207.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.11%)</title><rect x="872.5" y="165" width="1.3" height="15.0" fill="rgb(242,5,31)" rx="2" ry="2" />
<text  x="875.46" y="175.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (2 samples, 0.22%)</title><rect x="270.0" y="213" width="2.7" height="15.0" fill="rgb(250,27,5)" rx="2" ry="2" />
<text  x="273.04" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (192 samples, 21.26%)</title><rect x="10.0" y="357" width="250.9" height="15.0" fill="rgb(216,38,38)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>generic_perform_write (2 samples, 0.22%)</title><rect x="856.8" y="277" width="2.6" height="15.0" fill="rgb(229,22,19)" rx="2" ry="2" />
<text  x="859.78" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (192 samples, 21.26%)</title><rect x="10.0" y="373" width="250.9" height="15.0" fill="rgb(206,140,6)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>rcu_core_si (3 samples, 0.33%)</title><rect x="868.5" y="229" width="4.0" height="15.0" fill="rgb(252,98,15)" rx="2" ry="2" />
<text  x="871.54" y="239.5" ></text>
</g>
<g >
<title>unmap_vmas (433 samples, 47.95%)</title><rect x="287.0" y="277" width="565.9" height="15.0" fill="rgb(214,37,17)" rx="2" ry="2" />
<text  x="290.03" y="287.5" >unmap_vmas</text>
</g>
<g >
<title>page_remove_rmap (56 samples, 6.20%)</title><rect x="705.2" y="229" width="73.2" height="15.0" fill="rgb(223,37,36)" rx="2" ry="2" />
<text  x="708.19" y="239.5" >page_rem..</text>
</g>
<g >
<title>schedule (1 samples, 0.11%)</title><rect x="855.5" y="213" width="1.3" height="15.0" fill="rgb(249,20,31)" rx="2" ry="2" />
<text  x="858.47" y="223.5" ></text>
</g>
<g >
<title>lru_add_drain (2 samples, 0.22%)</title><rect x="786.2" y="197" width="2.6" height="15.0" fill="rgb(244,13,45)" rx="2" ry="2" />
<text  x="789.21" y="207.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (191 samples, 21.15%)</title><rect x="11.3" y="149" width="249.6" height="15.0" fill="rgb(242,161,10)" rx="2" ry="2" />
<text  x="14.31" y="159.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.11%)</title><rect x="693.4" y="229" width="1.3" height="15.0" fill="rgb(240,29,50)" rx="2" ry="2" />
<text  x="696.43" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (459 samples, 50.83%)</title><rect x="262.2" y="373" width="599.8" height="15.0" fill="rgb(211,114,37)" rx="2" ry="2" />
<text  x="265.20" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>__put_user_4 (1 samples, 0.11%)</title><rect x="859.4" y="325" width="1.3" height="15.0" fill="rgb(217,149,0)" rx="2" ry="2" />
<text  x="862.39" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.11%)</title><rect x="868.5" y="181" width="1.3" height="15.0" fill="rgb(242,73,30)" rx="2" ry="2" />
<text  x="871.54" y="191.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.11%)</title><rect x="1188.7" y="181" width="1.3" height="15.0" fill="rgb(218,194,13)" rx="2" ry="2" />
<text  x="1191.69" y="191.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.66%)</title><rect x="274.0" y="133" width="7.8" height="15.0" fill="rgb(232,83,19)" rx="2" ry="2" />
<text  x="276.96" y="143.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.11%)</title><rect x="871.2" y="101" width="1.3" height="15.0" fill="rgb(252,69,15)" rx="2" ry="2" />
<text  x="874.15" y="111.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.11%)</title><rect x="871.2" y="165" width="1.3" height="15.0" fill="rgb(241,217,11)" rx="2" ry="2" />
<text  x="874.15" y="175.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.22%)</title><rect x="1170.4" y="309" width="2.6" height="15.0" fill="rgb(245,141,30)" rx="2" ry="2" />
<text  x="1173.40" y="319.5" ></text>
</g>
<g >
<title>tclsh8.6 (8 samples, 0.89%)</title><rect x="1179.5" y="405" width="10.5" height="15.0" fill="rgb(251,200,42)" rx="2" ry="2" />
<text  x="1182.55" y="415.5" ></text>
</g>
<g >
<title>do_exit (452 samples, 50.06%)</title><rect x="262.2" y="325" width="590.7" height="15.0" fill="rgb(251,13,42)" rx="2" ry="2" />
<text  x="265.20" y="335.5" >do_exit</text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.89%)</title><rect x="1179.5" y="373" width="10.5" height="15.0" fill="rgb(234,62,3)" rx="2" ry="2" />
<text  x="1182.55" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.11%)</title><rect x="787.5" y="117" width="1.3" height="15.0" fill="rgb(210,115,15)" rx="2" ry="2" />
<text  x="790.52" y="127.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.11%)</title><rect x="863.3" y="229" width="1.3" height="15.0" fill="rgb(234,109,37)" rx="2" ry="2" />
<text  x="866.31" y="239.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.11%)</title><rect x="858.1" y="197" width="1.3" height="15.0" fill="rgb(221,30,30)" rx="2" ry="2" />
<text  x="861.08" y="207.5" ></text>
</g>
<g >
<title>free_fair_sched_group (1 samples, 0.11%)</title><rect x="871.2" y="181" width="1.3" height="15.0" fill="rgb(207,51,52)" rx="2" ry="2" />
<text  x="874.15" y="191.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.11%)</title><rect x="872.5" y="229" width="1.3" height="15.0" fill="rgb(212,218,31)" rx="2" ry="2" />
<text  x="875.46" y="239.5" ></text>
</g>
<g >
<title>tlb_remove_page (8 samples, 0.89%)</title><rect x="272.7" y="229" width="10.4" height="15.0" fill="rgb(205,79,48)" rx="2" ry="2" />
<text  x="275.66" y="239.5" ></text>
</g>
<g >
<title>sched_free_group_rcu (1 samples, 0.11%)</title><rect x="871.2" y="197" width="1.3" height="15.0" fill="rgb(229,23,53)" rx="2" ry="2" />
<text  x="874.15" y="207.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.11%)</title><rect x="863.3" y="245" width="1.3" height="15.0" fill="rgb(219,186,33)" rx="2" ry="2" />
<text  x="866.31" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="1187.4" y="293" width="1.3" height="15.0" fill="rgb(254,215,41)" rx="2" ry="2" />
<text  x="1190.39" y="303.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.11%)</title><rect x="787.5" y="101" width="1.3" height="15.0" fill="rgb(249,83,31)" rx="2" ry="2" />
<text  x="790.52" y="111.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (30 samples, 3.32%)</title><rect x="784.9" y="213" width="39.2" height="15.0" fill="rgb(212,21,47)" rx="2" ry="2" />
<text  x="787.91" y="223.5" >fre..</text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.11%)</title><rect x="858.1" y="229" width="1.3" height="15.0" fill="rgb(254,49,44)" rx="2" ry="2" />
<text  x="861.08" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.89%)</title><rect x="1179.5" y="389" width="10.5" height="15.0" fill="rgb(207,176,39)" rx="2" ry="2" />
<text  x="1182.55" y="399.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.11%)</title><rect x="860.7" y="309" width="1.3" height="15.0" fill="rgb(247,11,21)" rx="2" ry="2" />
<text  x="863.70" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.33%)</title><rect x="1184.8" y="357" width="3.9" height="15.0" fill="rgb(229,123,35)" rx="2" ry="2" />
<text  x="1187.77" y="367.5" ></text>
</g>
<g >
<title>rest_init (4 samples, 0.44%)</title><rect x="1174.3" y="309" width="5.2" height="15.0" fill="rgb(227,83,29)" rx="2" ry="2" />
<text  x="1177.32" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter (235 samples, 26.02%)</title><rect x="863.3" y="325" width="307.1" height="15.0" fill="rgb(226,115,3)" rx="2" ry="2" />
<text  x="866.31" y="335.5" >cpuidle_enter</text>
</g>
<g >
<title>exit_mmap (4 samples, 0.44%)</title><rect x="1179.5" y="293" width="5.3" height="15.0" fill="rgb(225,193,6)" rx="2" ry="2" />
<text  x="1182.55" y="303.5" ></text>
</g>
<g >
<title>mmput (4 samples, 0.44%)</title><rect x="1179.5" y="309" width="5.3" height="15.0" fill="rgb(234,1,15)" rx="2" ry="2" />
<text  x="1182.55" y="319.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.11%)</title><rect x="860.7" y="325" width="1.3" height="15.0" fill="rgb(229,198,25)" rx="2" ry="2" />
<text  x="863.70" y="335.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (2 samples, 0.22%)</title><rect x="856.8" y="261" width="2.6" height="15.0" fill="rgb(219,223,9)" rx="2" ry="2" />
<text  x="859.78" y="271.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.11%)</title><rect x="1184.8" y="277" width="1.3" height="15.0" fill="rgb(234,73,37)" rx="2" ry="2" />
<text  x="1187.77" y="287.5" ></text>
</g>
</g>
</svg>

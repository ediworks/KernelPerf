<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>jbd2/nvme0n1p3- (2 samples, 0.53%)</title><rect x="10.0" y="341" width="6.3" height="15.0" fill="rgb(240,166,7)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>rmap_walk_file (3 samples, 0.80%)</title><rect x="38.2" y="197" width="9.5" height="15.0" fill="rgb(213,49,44)" rx="2" ry="2" />
<text  x="41.24" y="207.5" ></text>
</g>
<g >
<title>arch_call_rest_init (5 samples, 1.33%)</title><rect x="1158.6" y="261" width="15.7" height="15.0" fill="rgb(250,198,26)" rx="2" ry="2" />
<text  x="1161.62" y="271.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.53%)</title><rect x="662.8" y="197" width="6.2" height="15.0" fill="rgb(218,215,7)" rx="2" ry="2" />
<text  x="665.77" y="207.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (188 samples, 50.00%)</title><rect x="60.2" y="85" width="590.0" height="15.0" fill="rgb(237,65,18)" rx="2" ry="2" />
<text  x="63.21" y="95.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.27%)</title><rect x="819.7" y="149" width="3.1" height="15.0" fill="rgb(223,63,35)" rx="2" ry="2" />
<text  x="822.68" y="159.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.27%)</title><rect x="669.0" y="181" width="3.2" height="15.0" fill="rgb(216,180,43)" rx="2" ry="2" />
<text  x="672.04" y="191.5" ></text>
</g>
<g >
<title>try_to_migrate (3 samples, 0.80%)</title><rect x="38.2" y="229" width="9.5" height="15.0" fill="rgb(209,210,16)" rx="2" ry="2" />
<text  x="41.24" y="239.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (1 samples, 0.27%)</title><rect x="13.1" y="133" width="3.2" height="15.0" fill="rgb(254,126,42)" rx="2" ry="2" />
<text  x="16.14" y="143.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.53%)</title><rect x="653.4" y="133" width="6.2" height="15.0" fill="rgb(217,209,54)" rx="2" ry="2" />
<text  x="656.35" y="143.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.27%)</title><rect x="1183.7" y="261" width="3.2" height="15.0" fill="rgb(214,23,26)" rx="2" ry="2" />
<text  x="1186.72" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.27%)</title><rect x="1155.5" y="229" width="3.1" height="15.0" fill="rgb(223,214,49)" rx="2" ry="2" />
<text  x="1158.48" y="239.5" ></text>
</g>
<g >
<title>kcompactd (10 samples, 2.66%)</title><rect x="16.3" y="293" width="31.4" height="15.0" fill="rgb(225,192,50)" rx="2" ry="2" />
<text  x="19.28" y="303.5" >kc..</text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.80%)</title><rect x="1174.3" y="277" width="9.4" height="15.0" fill="rgb(249,106,24)" rx="2" ry="2" />
<text  x="1177.31" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.27%)</title><rect x="866.8" y="149" width="3.1" height="15.0" fill="rgb(250,122,5)" rx="2" ry="2" />
<text  x="869.76" y="159.5" ></text>
</g>
<g >
<title>lookup_fast (2 samples, 0.53%)</title><rect x="851.1" y="181" width="6.2" height="15.0" fill="rgb(212,192,32)" rx="2" ry="2" />
<text  x="854.06" y="191.5" ></text>
</g>
<g >
<title>compact_lock_irqsave (1 samples, 0.27%)</title><rect x="28.8" y="197" width="3.2" height="15.0" fill="rgb(239,224,49)" rx="2" ry="2" />
<text  x="31.83" y="207.5" ></text>
</g>
<g >
<title>unlock_page_memcg (2 samples, 0.53%)</title><rect x="822.8" y="149" width="6.3" height="15.0" fill="rgb(206,19,25)" rx="2" ry="2" />
<text  x="825.82" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.27%)</title><rect x="866.8" y="197" width="3.1" height="15.0" fill="rgb(248,24,4)" rx="2" ry="2" />
<text  x="869.76" y="207.5" ></text>
</g>
<g >
<title>set_current_blocked (1 samples, 0.27%)</title><rect x="863.6" y="277" width="3.2" height="15.0" fill="rgb(220,76,13)" rx="2" ry="2" />
<text  x="866.62" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (86 samples, 22.87%)</title><rect x="885.6" y="229" width="269.9" height="15.0" fill="rgb(214,128,54)" rx="2" ry="2" />
<text  x="888.59" y="239.5" >mwait_idle_with_hints.constprop.0</text>
</g>
<g >
<title>isolate_freepages_block (1 samples, 0.27%)</title><rect x="28.8" y="213" width="3.2" height="15.0" fill="rgb(232,73,27)" rx="2" ry="2" />
<text  x="31.83" y="223.5" ></text>
</g>
<g >
<title>free_swap_cache (1 samples, 0.27%)</title><rect x="659.6" y="133" width="3.2" height="15.0" fill="rgb(216,86,20)" rx="2" ry="2" />
<text  x="662.63" y="143.5" ></text>
</g>
<g >
<title>postgres (68 samples, 18.09%)</title><rect x="650.2" y="341" width="213.4" height="15.0" fill="rgb(218,131,20)" rx="2" ry="2" />
<text  x="653.21" y="351.5" >postgres</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.27%)</title><rect x="13.1" y="325" width="3.2" height="15.0" fill="rgb(231,88,5)" rx="2" ry="2" />
<text  x="16.14" y="335.5" ></text>
</g>
<g >
<title>exc_page_fault (3 samples, 0.80%)</title><rect x="1174.3" y="309" width="9.4" height="15.0" fill="rgb(222,215,52)" rx="2" ry="2" />
<text  x="1177.31" y="319.5" ></text>
</g>
<g >
<title>set_page_dirty (1 samples, 0.27%)</title><rect x="829.1" y="165" width="3.1" height="15.0" fill="rgb(206,58,49)" rx="2" ry="2" />
<text  x="832.10" y="175.5" ></text>
</g>
<g >
<title>run_rebalance_domains (4 samples, 1.06%)</title><rect x="869.9" y="165" width="12.5" height="15.0" fill="rgb(225,120,35)" rx="2" ry="2" />
<text  x="872.89" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.53%)</title><rect x="1183.7" y="309" width="6.3" height="15.0" fill="rgb(207,87,23)" rx="2" ry="2" />
<text  x="1186.72" y="319.5" ></text>
</g>
<g >
<title>_perf_event_enable (192 samples, 51.06%)</title><rect x="47.7" y="229" width="602.5" height="15.0" fill="rgb(213,47,42)" rx="2" ry="2" />
<text  x="50.66" y="239.5" >_perf_event_enable</text>
</g>
<g >
<title>event_function_call (192 samples, 51.06%)</title><rect x="47.7" y="213" width="602.5" height="15.0" fill="rgb(220,52,53)" rx="2" ry="2" />
<text  x="50.66" y="223.5" >event_function_call</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (192 samples, 51.06%)</title><rect x="47.7" y="325" width="602.5" height="15.0" fill="rgb(223,208,29)" rx="2" ry="2" />
<text  x="50.66" y="335.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (3 samples, 0.80%)</title><rect x="1158.6" y="165" width="9.4" height="15.0" fill="rgb(233,115,40)" rx="2" ry="2" />
<text  x="1161.62" y="175.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.27%)</title><rect x="650.2" y="213" width="3.2" height="15.0" fill="rgb(211,163,54)" rx="2" ry="2" />
<text  x="653.21" y="223.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.27%)</title><rect x="866.8" y="117" width="3.1" height="15.0" fill="rgb(249,20,25)" rx="2" ry="2" />
<text  x="869.76" y="127.5" ></text>
</g>
<g >
<title>__put_page (3 samples, 0.80%)</title><rect x="19.4" y="229" width="9.4" height="15.0" fill="rgb(212,175,51)" rx="2" ry="2" />
<text  x="22.41" y="239.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.27%)</title><rect x="835.4" y="133" width="3.1" height="15.0" fill="rgb(218,199,18)" rx="2" ry="2" />
<text  x="838.37" y="143.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5 samples, 1.33%)</title><rect x="1158.6" y="229" width="15.7" height="15.0" fill="rgb(228,5,33)" rx="2" ry="2" />
<text  x="1161.62" y="239.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.27%)</title><rect x="844.8" y="181" width="3.1" height="15.0" fill="rgb(205,170,6)" rx="2" ry="2" />
<text  x="847.79" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_rt_sigreturn (1 samples, 0.27%)</title><rect x="863.6" y="293" width="3.2" height="15.0" fill="rgb(235,204,5)" rx="2" ry="2" />
<text  x="866.62" y="303.5" ></text>
</g>
<g >
<title>alloc_misplaced_dst_page (1 samples, 0.27%)</title><rect x="1174.3" y="213" width="3.1" height="15.0" fill="rgb(205,73,22)" rx="2" ry="2" />
<text  x="1177.31" y="223.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (2 samples, 0.53%)</title><rect x="1174.3" y="245" width="6.3" height="15.0" fill="rgb(228,133,15)" rx="2" ry="2" />
<text  x="1177.31" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.27%)</title><rect x="28.8" y="181" width="3.2" height="15.0" fill="rgb(223,129,33)" rx="2" ry="2" />
<text  x="31.83" y="191.5" ></text>
</g>
<g >
<title>_perf_ioctl (192 samples, 51.06%)</title><rect x="47.7" y="261" width="602.5" height="15.0" fill="rgb(246,186,32)" rx="2" ry="2" />
<text  x="50.66" y="271.5" >_perf_ioctl</text>
</g>
<g >
<title>do_futex (2 samples, 0.53%)</title><rect x="1183.7" y="277" width="6.3" height="15.0" fill="rgb(205,89,29)" rx="2" ry="2" />
<text  x="1186.72" y="287.5" ></text>
</g>
<g >
<title>do_exit (60 samples, 15.96%)</title><rect x="650.2" y="261" width="188.3" height="15.0" fill="rgb(223,97,30)" rx="2" ry="2" />
<text  x="653.21" y="271.5" >do_exit</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.27%)</title><rect x="1186.9" y="245" width="3.1" height="15.0" fill="rgb(226,180,3)" rx="2" ry="2" />
<text  x="1189.86" y="255.5" ></text>
</g>
<g >
<title>bmap (1 samples, 0.27%)</title><rect x="13.1" y="229" width="3.2" height="15.0" fill="rgb(253,101,42)" rx="2" ry="2" />
<text  x="16.14" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.27%)</title><rect x="1174.3" y="197" width="3.1" height="15.0" fill="rgb(235,211,19)" rx="2" ry="2" />
<text  x="1177.31" y="207.5" ></text>
</g>
<g >
<title>migrate_page_move_mapping (1 samples, 0.27%)</title><rect x="35.1" y="181" width="3.1" height="15.0" fill="rgb(227,81,21)" rx="2" ry="2" />
<text  x="38.11" y="191.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.27%)</title><rect x="16.3" y="229" width="3.1" height="15.0" fill="rgb(224,59,33)" rx="2" ry="2" />
<text  x="19.28" y="239.5" ></text>
</g>
<g >
<title>free_unref_page (3 samples, 0.80%)</title><rect x="19.4" y="213" width="9.4" height="15.0" fill="rgb(226,219,25)" rx="2" ry="2" />
<text  x="22.41" y="223.5" ></text>
</g>
<g >
<title>rebalance_domains (3 samples, 0.80%)</title><rect x="869.9" y="149" width="9.4" height="15.0" fill="rgb(239,166,17)" rx="2" ry="2" />
<text  x="872.89" y="159.5" ></text>
</g>
<g >
<title>event_function (192 samples, 51.06%)</title><rect x="47.7" y="149" width="602.5" height="15.0" fill="rgb(244,183,31)" rx="2" ry="2" />
<text  x="50.66" y="159.5" >event_function</text>
</g>
<g >
<title>ptep_clear_flush (2 samples, 0.53%)</title><rect x="41.4" y="165" width="6.3" height="15.0" fill="rgb(209,194,7)" rx="2" ry="2" />
<text  x="44.38" y="175.5" ></text>
</g>
<g >
<title>mmput (60 samples, 15.96%)</title><rect x="650.2" y="245" width="188.3" height="15.0" fill="rgb(212,11,9)" rx="2" ry="2" />
<text  x="653.21" y="255.5" >mmput</text>
</g>
<g >
<title>cpuidle_enter_state (3 samples, 0.80%)</title><rect x="1158.6" y="181" width="9.4" height="15.0" fill="rgb(233,200,54)" rx="2" ry="2" />
<text  x="1161.62" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (192 samples, 51.06%)</title><rect x="47.7" y="309" width="602.5" height="15.0" fill="rgb(226,142,28)" rx="2" ry="2" />
<text  x="50.66" y="319.5" >do_syscall_64</text>
</g>
<g >
<title>lru_add_drain (1 samples, 0.27%)</title><rect x="832.2" y="133" width="3.2" height="15.0" fill="rgb(208,198,30)" rx="2" ry="2" />
<text  x="835.23" y="143.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.27%)</title><rect x="13.1" y="149" width="3.2" height="15.0" fill="rgb(240,177,5)" rx="2" ry="2" />
<text  x="16.14" y="159.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.80%)</title><rect x="1174.3" y="293" width="9.4" height="15.0" fill="rgb(251,196,35)" rx="2" ry="2" />
<text  x="1177.31" y="303.5" ></text>
</g>
<g >
<title>vfs_statx (7 samples, 1.86%)</title><rect x="841.6" y="261" width="22.0" height="15.0" fill="rgb(238,170,29)" rx="2" ry="2" />
<text  x="844.65" y="271.5" >v..</text>
</g>
<g >
<title>generic_exec_single (192 samples, 51.06%)</title><rect x="47.7" y="181" width="602.5" height="15.0" fill="rgb(247,223,34)" rx="2" ry="2" />
<text  x="50.66" y="191.5" >generic_exec_single</text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.27%)</title><rect x="1174.3" y="165" width="3.1" height="15.0" fill="rgb(223,143,7)" rx="2" ry="2" />
<text  x="1177.31" y="175.5" ></text>
</g>
<g >
<title>remote_function (192 samples, 51.06%)</title><rect x="47.7" y="165" width="602.5" height="15.0" fill="rgb(225,149,22)" rx="2" ry="2" />
<text  x="50.66" y="175.5" >remote_function</text>
</g>
<g >
<title>page_add_anon_rmap (1 samples, 0.27%)</title><rect x="1177.4" y="165" width="3.2" height="15.0" fill="rgb(225,68,14)" rx="2" ry="2" />
<text  x="1180.45" y="175.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.27%)</title><rect x="32.0" y="181" width="3.1" height="15.0" fill="rgb(215,103,44)" rx="2" ry="2" />
<text  x="34.97" y="191.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.27%)</title><rect x="1171.2" y="197" width="3.1" height="15.0" fill="rgb(215,77,53)" rx="2" ry="2" />
<text  x="1174.17" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1 samples, 0.27%)</title><rect x="1177.4" y="133" width="3.2" height="15.0" fill="rgb(223,154,7)" rx="2" ry="2" />
<text  x="1180.45" y="143.5" ></text>
</g>
<g >
<title>all (376 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(250,83,32)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>split_map_pages (1 samples, 0.27%)</title><rect x="32.0" y="213" width="3.1" height="15.0" fill="rgb(240,227,18)" rx="2" ry="2" />
<text  x="34.97" y="223.5" ></text>
</g>
<g >
<title>ctx_resched (191 samples, 50.80%)</title><rect x="50.8" y="117" width="599.4" height="15.0" fill="rgb(208,213,22)" rx="2" ry="2" />
<text  x="53.80" y="127.5" >ctx_resched</text>
</g>
<g >
<title>secondary_startup_64_no_verify (98 samples, 26.06%)</title><rect x="866.8" y="325" width="307.5" height="15.0" fill="rgb(245,117,44)" rx="2" ry="2" />
<text  x="869.76" y="335.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.53%)</title><rect x="41.4" y="117" width="6.3" height="15.0" fill="rgb(244,228,35)" rx="2" ry="2" />
<text  x="44.38" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.27%)</title><rect x="841.6" y="245" width="3.2" height="15.0" fill="rgb(208,23,30)" rx="2" ry="2" />
<text  x="844.65" y="255.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.27%)</title><rect x="829.1" y="149" width="3.1" height="15.0" fill="rgb(222,128,36)" rx="2" ry="2" />
<text  x="832.10" y="159.5" ></text>
</g>
<g >
<title>cpuidle_enter (3 samples, 0.80%)</title><rect x="1158.6" y="197" width="9.4" height="15.0" fill="rgb(242,117,34)" rx="2" ry="2" />
<text  x="1161.62" y="207.5" ></text>
</g>
<g >
<title>unmap_single_vma (54 samples, 14.36%)</title><rect x="669.0" y="197" width="169.5" height="15.0" fill="rgb(235,181,32)" rx="2" ry="2" />
<text  x="672.04" y="207.5" >unmap_single_vma</text>
</g>
<g >
<title>__buffer_migrate_page.part.0 (1 samples, 0.27%)</title><rect x="35.1" y="197" width="3.1" height="15.0" fill="rgb(239,133,35)" rx="2" ry="2" />
<text  x="38.11" y="207.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.27%)</title><rect x="882.4" y="85" width="3.2" height="15.0" fill="rgb(238,218,11)" rx="2" ry="2" />
<text  x="885.45" y="95.5" ></text>
</g>
<g >
<title>___pte_free_tlb (3 samples, 0.80%)</title><rect x="653.4" y="181" width="9.4" height="15.0" fill="rgb(219,116,47)" rx="2" ry="2" />
<text  x="656.35" y="191.5" ></text>
</g>
<g >
<title>security_inode_getattr (1 samples, 0.27%)</title><rect x="844.8" y="245" width="3.1" height="15.0" fill="rgb(246,22,39)" rx="2" ry="2" />
<text  x="847.79" y="255.5" ></text>
</g>
<g >
<title>exit_mmap (60 samples, 15.96%)</title><rect x="650.2" y="229" width="188.3" height="15.0" fill="rgb(206,149,0)" rx="2" ry="2" />
<text  x="653.21" y="239.5" >exit_mmap</text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (2 samples, 0.53%)</title><rect x="662.8" y="149" width="6.2" height="15.0" fill="rgb(254,15,36)" rx="2" ry="2" />
<text  x="665.77" y="159.5" ></text>
</g>
<g >
<title>swapper (98 samples, 26.06%)</title><rect x="866.8" y="341" width="307.5" height="15.0" fill="rgb(210,25,52)" rx="2" ry="2" />
<text  x="869.76" y="351.5" >swapper</text>
</g>
<g >
<title>__do_sys_newfstatat (8 samples, 2.13%)</title><rect x="838.5" y="277" width="25.1" height="15.0" fill="rgb(233,28,0)" rx="2" ry="2" />
<text  x="841.51" y="287.5" >_..</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.27%)</title><rect x="882.4" y="69" width="3.2" height="15.0" fill="rgb(231,200,1)" rx="2" ry="2" />
<text  x="885.45" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (68 samples, 18.09%)</title><rect x="650.2" y="325" width="213.4" height="15.0" fill="rgb(229,134,49)" rx="2" ry="2" />
<text  x="653.21" y="335.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__activate_page (1 samples, 0.27%)</title><rect x="832.2" y="85" width="3.2" height="15.0" fill="rgb(248,196,4)" rx="2" ry="2" />
<text  x="835.23" y="95.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.27%)</title><rect x="13.1" y="309" width="3.2" height="15.0" fill="rgb(227,77,2)" rx="2" ry="2" />
<text  x="16.14" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.53%)</title><rect x="1183.7" y="325" width="6.3" height="15.0" fill="rgb(221,24,13)" rx="2" ry="2" />
<text  x="1186.72" y="335.5" ></text>
</g>
<g >
<title>migrate_pages (2 samples, 0.53%)</title><rect x="1174.3" y="229" width="6.3" height="15.0" fill="rgb(220,1,26)" rx="2" ry="2" />
<text  x="1177.31" y="239.5" ></text>
</g>
<g >
<title>common_perm_cond (1 samples, 0.27%)</title><rect x="844.8" y="213" width="3.1" height="15.0" fill="rgb(247,0,10)" rx="2" ry="2" />
<text  x="847.79" y="223.5" ></text>
</g>
<g >
<title>get_next_freq (1 samples, 0.27%)</title><rect x="879.3" y="133" width="3.1" height="15.0" fill="rgb(208,48,0)" rx="2" ry="2" />
<text  x="882.31" y="143.5" ></text>
</g>
<g >
<title>x86_pmu_enable (189 samples, 50.27%)</title><rect x="57.1" y="101" width="593.1" height="15.0" fill="rgb(225,208,22)" rx="2" ry="2" />
<text  x="60.07" y="111.5" >x86_pmu_enable</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.27%)</title><rect x="866.8" y="165" width="3.1" height="15.0" fill="rgb(226,159,36)" rx="2" ry="2" />
<text  x="869.76" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6 samples, 1.60%)</title><rect x="866.8" y="213" width="18.8" height="15.0" fill="rgb(247,98,45)" rx="2" ry="2" />
<text  x="869.76" y="223.5" ></text>
</g>
<g >
<title>remove_migration_pte (1 samples, 0.27%)</title><rect x="1177.4" y="181" width="3.2" height="15.0" fill="rgb(213,1,40)" rx="2" ry="2" />
<text  x="1180.45" y="191.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (2 samples, 0.53%)</title><rect x="41.4" y="101" width="6.3" height="15.0" fill="rgb(245,158,25)" rx="2" ry="2" />
<text  x="44.38" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.27%)</title><rect x="1183.7" y="229" width="3.2" height="15.0" fill="rgb(232,93,12)" rx="2" ry="2" />
<text  x="1186.72" y="239.5" ></text>
</g>
<g >
<title>start_secondary (93 samples, 24.73%)</title><rect x="866.8" y="309" width="291.8" height="15.0" fill="rgb(254,123,28)" rx="2" ry="2" />
<text  x="869.76" y="319.5" >start_secondary</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.27%)</title><rect x="876.2" y="101" width="3.1" height="15.0" fill="rgb(208,169,41)" rx="2" ry="2" />
<text  x="879.17" y="111.5" ></text>
</g>
<g >
<title>filename_lookup (3 samples, 0.80%)</title><rect x="847.9" y="229" width="9.4" height="15.0" fill="rgb(234,109,22)" rx="2" ry="2" />
<text  x="850.93" y="239.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.27%)</title><rect x="866.8" y="101" width="3.1" height="15.0" fill="rgb(210,55,27)" rx="2" ry="2" />
<text  x="869.76" y="111.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (192 samples, 51.06%)</title><rect x="47.7" y="245" width="602.5" height="15.0" fill="rgb(250,36,25)" rx="2" ry="2" />
<text  x="50.66" y="255.5" >perf_event_for_each_child</text>
</g>
<g >
<title>vfs_getattr_nosec (2 samples, 0.53%)</title><rect x="857.3" y="245" width="6.3" height="15.0" fill="rgb(244,56,27)" rx="2" ry="2" />
<text  x="860.34" y="255.5" ></text>
</g>
<g >
<title>task_numa_migrate.isra.0 (1 samples, 0.27%)</title><rect x="1180.6" y="229" width="3.1" height="15.0" fill="rgb(242,0,12)" rx="2" ry="2" />
<text  x="1183.59" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6 samples, 1.60%)</title><rect x="866.8" y="229" width="18.8" height="15.0" fill="rgb(216,80,34)" rx="2" ry="2" />
<text  x="869.76" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (92 samples, 24.47%)</title><rect x="866.8" y="245" width="288.7" height="15.0" fill="rgb(226,141,16)" rx="2" ry="2" />
<text  x="869.76" y="255.5" >cpuidle_enter_state</text>
</g>
<g >
<title>__schedule (1 samples, 0.27%)</title><rect x="1171.2" y="181" width="3.1" height="15.0" fill="rgb(243,101,37)" rx="2" ry="2" />
<text  x="1174.17" y="191.5" ></text>
</g>
<g >
<title>page_remove_rmap (8 samples, 2.13%)</title><rect x="804.0" y="165" width="25.1" height="15.0" fill="rgb(229,91,53)" rx="2" ry="2" />
<text  x="806.99" y="175.5" >p..</text>
</g>
<g >
<title>__x64_sys_exit_group (60 samples, 15.96%)</title><rect x="650.2" y="293" width="188.3" height="15.0" fill="rgb(252,132,36)" rx="2" ry="2" />
<text  x="653.21" y="303.5" >__x64_sys_exit_group</text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.53%)</title><rect x="1183.7" y="293" width="6.3" height="15.0" fill="rgb(228,26,16)" rx="2" ry="2" />
<text  x="1186.72" y="303.5" ></text>
</g>
<g >
<title>security_inode_getattr (1 samples, 0.27%)</title><rect x="838.5" y="261" width="3.1" height="15.0" fill="rgb(240,73,30)" rx="2" ry="2" />
<text  x="841.51" y="271.5" ></text>
</g>
<g >
<title>compact_zone (10 samples, 2.66%)</title><rect x="16.3" y="261" width="31.4" height="15.0" fill="rgb(254,28,33)" rx="2" ry="2" />
<text  x="19.28" y="271.5" >co..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="863.6" y="325" width="3.2" height="15.0" fill="rgb(210,75,11)" rx="2" ry="2" />
<text  x="866.62" y="335.5" ></text>
</g>
<g >
<title>user_path_at_empty (3 samples, 0.80%)</title><rect x="847.9" y="245" width="9.4" height="15.0" fill="rgb(218,180,5)" rx="2" ry="2" />
<text  x="850.93" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.80%)</title><rect x="1174.3" y="261" width="9.4" height="15.0" fill="rgb(242,131,51)" rx="2" ry="2" />
<text  x="1177.31" y="271.5" ></text>
</g>
<g >
<title>rmap_walk_anon (1 samples, 0.27%)</title><rect x="1177.4" y="197" width="3.2" height="15.0" fill="rgb(253,70,13)" rx="2" ry="2" />
<text  x="1180.45" y="207.5" ></text>
</g>
<g >
<title>__free_one_page (2 samples, 0.53%)</title><rect x="662.8" y="117" width="6.2" height="15.0" fill="rgb(240,71,39)" rx="2" ry="2" />
<text  x="665.77" y="127.5" ></text>
</g>
<g >
<title>__perf_event_enable (191 samples, 50.80%)</title><rect x="50.8" y="133" width="599.4" height="15.0" fill="rgb(246,120,36)" rx="2" ry="2" />
<text  x="53.80" y="143.5" >__perf_event_enable</text>
</g>
<g >
<title>enqueue_task (1 samples, 0.27%)</title><rect x="882.4" y="53" width="3.2" height="15.0" fill="rgb(224,46,21)" rx="2" ry="2" />
<text  x="885.45" y="63.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.53%)</title><rect x="832.2" y="149" width="6.3" height="15.0" fill="rgb(237,34,35)" rx="2" ry="2" />
<text  x="835.23" y="159.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (1 samples, 0.27%)</title><rect x="1155.5" y="261" width="3.1" height="15.0" fill="rgb(238,58,26)" rx="2" ry="2" />
<text  x="1158.48" y="271.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (2 samples, 0.53%)</title><rect x="851.1" y="165" width="6.2" height="15.0" fill="rgb(236,163,42)" rx="2" ry="2" />
<text  x="854.06" y="175.5" ></text>
</g>
<g >
<title>move_to_new_page (1 samples, 0.27%)</title><rect x="35.1" y="229" width="3.1" height="15.0" fill="rgb(224,37,7)" rx="2" ry="2" />
<text  x="38.11" y="239.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.53%)</title><rect x="662.8" y="181" width="6.2" height="15.0" fill="rgb(211,158,50)" rx="2" ry="2" />
<text  x="665.77" y="191.5" ></text>
</g>
<g >
<title>ext4_bmap (1 samples, 0.27%)</title><rect x="13.1" y="213" width="3.2" height="15.0" fill="rgb(232,63,43)" rx="2" ry="2" />
<text  x="16.14" y="223.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.27%)</title><rect x="53.9" y="101" width="3.2" height="15.0" fill="rgb(240,89,50)" rx="2" ry="2" />
<text  x="56.94" y="111.5" ></text>
</g>
<g >
<title>cpu_startup_entry (93 samples, 24.73%)</title><rect x="866.8" y="293" width="291.8" height="15.0" fill="rgb(230,143,1)" rx="2" ry="2" />
<text  x="869.76" y="303.5" >cpu_startup_entry</text>
</g>
<g >
<title>perf_ioctl (192 samples, 51.06%)</title><rect x="47.7" y="277" width="602.5" height="15.0" fill="rgb(251,161,18)" rx="2" ry="2" />
<text  x="50.66" y="287.5" >perf_ioctl</text>
</g>
<g >
<title>xas_load (1 samples, 0.27%)</title><rect x="35.1" y="165" width="3.1" height="15.0" fill="rgb(237,121,24)" rx="2" ry="2" />
<text  x="38.11" y="175.5" ></text>
</g>
<g >
<title>jbd2_journal_next_log_block (1 samples, 0.27%)</title><rect x="13.1" y="261" width="3.2" height="15.0" fill="rgb(225,227,48)" rx="2" ry="2" />
<text  x="16.14" y="271.5" ></text>
</g>
<g >
<title>compaction_alloc (2 samples, 0.53%)</title><rect x="28.8" y="229" width="6.3" height="15.0" fill="rgb(240,50,28)" rx="2" ry="2" />
<text  x="31.83" y="239.5" ></text>
</g>
<g >
<title>iomap_iter (1 samples, 0.27%)</title><rect x="13.1" y="181" width="3.2" height="15.0" fill="rgb(249,172,39)" rx="2" ry="2" />
<text  x="16.14" y="191.5" ></text>
</g>
<g >
<title>tlb_remove_page (3 samples, 0.80%)</title><rect x="653.4" y="165" width="9.4" height="15.0" fill="rgb(217,20,16)" rx="2" ry="2" />
<text  x="656.35" y="175.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.27%)</title><rect x="832.2" y="101" width="3.2" height="15.0" fill="rgb(231,59,20)" rx="2" ry="2" />
<text  x="835.23" y="111.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.53%)</title><rect x="653.4" y="117" width="6.2" height="15.0" fill="rgb(251,41,46)" rx="2" ry="2" />
<text  x="656.35" y="127.5" ></text>
</g>
<g >
<title>process_timeout (1 samples, 0.27%)</title><rect x="882.4" y="117" width="3.2" height="15.0" fill="rgb(250,147,12)" rx="2" ry="2" />
<text  x="885.45" y="127.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.27%)</title><rect x="847.9" y="197" width="3.2" height="15.0" fill="rgb(222,85,24)" rx="2" ry="2" />
<text  x="850.93" y="207.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 1.33%)</title><rect x="869.9" y="181" width="15.7" height="15.0" fill="rgb(235,43,50)" rx="2" ry="2" />
<text  x="872.89" y="191.5" ></text>
</g>
<g >
<title>task_numa_fault (1 samples, 0.27%)</title><rect x="1180.6" y="245" width="3.1" height="15.0" fill="rgb(208,145,44)" rx="2" ry="2" />
<text  x="1183.59" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.27%)</title><rect x="866.8" y="181" width="3.1" height="15.0" fill="rgb(246,69,20)" rx="2" ry="2" />
<text  x="869.76" y="191.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.27%)</title><rect x="835.4" y="117" width="3.1" height="15.0" fill="rgb(205,133,32)" rx="2" ry="2" />
<text  x="838.37" y="127.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.27%)</title><rect x="1186.9" y="229" width="3.1" height="15.0" fill="rgb(253,131,13)" rx="2" ry="2" />
<text  x="1189.86" y="239.5" ></text>
</g>
<g >
<title>start_kernel (5 samples, 1.33%)</title><rect x="1158.6" y="277" width="15.7" height="15.0" fill="rgb(233,34,46)" rx="2" ry="2" />
<text  x="1161.62" y="287.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.27%)</title><rect x="800.9" y="165" width="3.1" height="15.0" fill="rgb(211,57,11)" rx="2" ry="2" />
<text  x="803.85" y="175.5" ></text>
</g>
<g >
<title>do_idle (5 samples, 1.33%)</title><rect x="1158.6" y="213" width="15.7" height="15.0" fill="rgb(228,34,17)" rx="2" ry="2" />
<text  x="1161.62" y="223.5" ></text>
</g>
<g >
<title>ext4_file_getattr (2 samples, 0.53%)</title><rect x="857.3" y="229" width="6.3" height="15.0" fill="rgb(227,51,24)" rx="2" ry="2" />
<text  x="860.34" y="239.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.27%)</title><rect x="847.9" y="181" width="3.2" height="15.0" fill="rgb(211,51,36)" rx="2" ry="2" />
<text  x="850.93" y="191.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.53%)</title><rect x="662.8" y="213" width="6.2" height="15.0" fill="rgb(252,140,16)" rx="2" ry="2" />
<text  x="665.77" y="223.5" ></text>
</g>
<g >
<title>ext4_getattr (1 samples, 0.27%)</title><rect x="860.5" y="213" width="3.1" height="15.0" fill="rgb(238,27,42)" rx="2" ry="2" />
<text  x="863.48" y="223.5" ></text>
</g>
<g >
<title>step_into (1 samples, 0.27%)</title><rect x="847.9" y="165" width="3.2" height="15.0" fill="rgb(243,76,23)" rx="2" ry="2" />
<text  x="850.93" y="175.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.27%)</title><rect x="882.4" y="101" width="3.2" height="15.0" fill="rgb(210,86,18)" rx="2" ry="2" />
<text  x="885.45" y="111.5" ></text>
</g>
<g >
<title>kjournald2 (1 samples, 0.27%)</title><rect x="13.1" y="293" width="3.2" height="15.0" fill="rgb(252,166,23)" rx="2" ry="2" />
<text  x="16.14" y="303.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.27%)</title><rect x="10.0" y="325" width="3.1" height="15.0" fill="rgb(231,220,16)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (1 samples, 0.27%)</title><rect x="25.7" y="197" width="3.1" height="15.0" fill="rgb(243,149,18)" rx="2" ry="2" />
<text  x="28.69" y="207.5" ></text>
</g>
<g >
<title>jbd2_journal_bmap (1 samples, 0.27%)</title><rect x="13.1" y="245" width="3.2" height="15.0" fill="rgb(218,61,15)" rx="2" ry="2" />
<text  x="16.14" y="255.5" ></text>
</g>
<g >
<title>proactive_compact_node (10 samples, 2.66%)</title><rect x="16.3" y="277" width="31.4" height="15.0" fill="rgb(250,186,28)" rx="2" ry="2" />
<text  x="19.28" y="287.5" >pr..</text>
</g>
<g >
<title>unmap_vmas (54 samples, 14.36%)</title><rect x="669.0" y="213" width="169.5" height="15.0" fill="rgb(238,54,25)" rx="2" ry="2" />
<text  x="672.04" y="223.5" >unmap_vmas</text>
</g>
<g >
<title>rmap_walk (1 samples, 0.27%)</title><rect x="1177.4" y="213" width="3.2" height="15.0" fill="rgb(251,51,16)" rx="2" ry="2" />
<text  x="1180.45" y="223.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (1 samples, 0.27%)</title><rect x="656.5" y="85" width="3.1" height="15.0" fill="rgb(230,168,14)" rx="2" ry="2" />
<text  x="659.49" y="95.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (1 samples, 0.27%)</title><rect x="832.2" y="117" width="3.2" height="15.0" fill="rgb(205,179,54)" rx="2" ry="2" />
<text  x="835.23" y="127.5" ></text>
</g>
<g >
<title>smp_call_function_single (192 samples, 51.06%)</title><rect x="47.7" y="197" width="602.5" height="15.0" fill="rgb(236,223,30)" rx="2" ry="2" />
<text  x="50.66" y="207.5" >smp_call_function_single</text>
</g>
<g >
<title>futex_wake (1 samples, 0.27%)</title><rect x="1186.9" y="261" width="3.1" height="15.0" fill="rgb(207,28,11)" rx="2" ry="2" />
<text  x="1189.86" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (8 samples, 2.13%)</title><rect x="838.5" y="293" width="25.1" height="15.0" fill="rgb(239,159,16)" rx="2" ry="2" />
<text  x="841.51" y="303.5" >_..</text>
</g>
<g >
<title>x86_64_start_kernel (5 samples, 1.33%)</title><rect x="1158.6" y="309" width="15.7" height="15.0" fill="rgb(245,11,43)" rx="2" ry="2" />
<text  x="1161.62" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.27%)</title><rect x="866.8" y="133" width="3.1" height="15.0" fill="rgb(211,90,51)" rx="2" ry="2" />
<text  x="869.76" y="143.5" ></text>
</g>
<g >
<title>menu_reflect (1 samples, 0.27%)</title><rect x="1168.0" y="197" width="3.2" height="15.0" fill="rgb(249,202,54)" rx="2" ry="2" />
<text  x="1171.03" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (192 samples, 51.06%)</title><rect x="47.7" y="293" width="602.5" height="15.0" fill="rgb(240,136,45)" rx="2" ry="2" />
<text  x="50.66" y="303.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>irq_exit_rcu (5 samples, 1.33%)</title><rect x="869.9" y="197" width="15.7" height="15.0" fill="rgb(231,166,41)" rx="2" ry="2" />
<text  x="872.89" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.27%)</title><rect x="1174.3" y="181" width="3.1" height="15.0" fill="rgb(246,65,32)" rx="2" ry="2" />
<text  x="1177.31" y="191.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.27%)</title><rect x="1177.4" y="117" width="3.2" height="15.0" fill="rgb(220,20,24)" rx="2" ry="2" />
<text  x="1180.45" y="127.5" ></text>
</g>
<g >
<title>jbd2_journal_commit_transaction (1 samples, 0.27%)</title><rect x="13.1" y="277" width="3.2" height="15.0" fill="rgb(252,41,51)" rx="2" ry="2" />
<text  x="16.14" y="287.5" ></text>
</g>
<g >
<title>kcompactd0 (10 samples, 2.66%)</title><rect x="16.3" y="341" width="31.4" height="15.0" fill="rgb(210,50,38)" rx="2" ry="2" />
<text  x="19.28" y="351.5" >kc..</text>
</g>
<g >
<title>do_syscall_64 (68 samples, 18.09%)</title><rect x="650.2" y="309" width="213.4" height="15.0" fill="rgb(224,200,30)" rx="2" ry="2" />
<text  x="653.21" y="319.5" >do_syscall_64</text>
</g>
<g >
<title>rest_init (5 samples, 1.33%)</title><rect x="1158.6" y="245" width="15.7" height="15.0" fill="rgb(228,5,28)" rx="2" ry="2" />
<text  x="1161.62" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (188 samples, 50.00%)</title><rect x="60.2" y="69" width="590.0" height="15.0" fill="rgb(225,27,43)" rx="2" ry="2" />
<text  x="63.21" y="79.5" >native_write_msr</text>
</g>
<g >
<title>do_page_add_anon_rmap (1 samples, 0.27%)</title><rect x="1177.4" y="149" width="3.2" height="15.0" fill="rgb(215,44,40)" rx="2" ry="2" />
<text  x="1180.45" y="159.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.27%)</title><rect x="656.5" y="101" width="3.1" height="15.0" fill="rgb(220,189,9)" rx="2" ry="2" />
<text  x="659.49" y="111.5" ></text>
</g>
<g >
<title>buffer_migrate_page (1 samples, 0.27%)</title><rect x="35.1" y="213" width="3.1" height="15.0" fill="rgb(241,220,38)" rx="2" ry="2" />
<text  x="38.11" y="223.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.27%)</title><rect x="876.2" y="133" width="3.1" height="15.0" fill="rgb(233,114,1)" rx="2" ry="2" />
<text  x="879.17" y="143.5" ></text>
</g>
<g >
<title>do_group_exit (60 samples, 15.96%)</title><rect x="650.2" y="277" width="188.3" height="15.0" fill="rgb(228,118,10)" rx="2" ry="2" />
<text  x="653.21" y="287.5" >do_group_exit</text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.27%)</title><rect x="882.4" y="149" width="3.2" height="15.0" fill="rgb(246,194,54)" rx="2" ry="2" />
<text  x="885.45" y="159.5" ></text>
</g>
<g >
<title>ret_from_fork (10 samples, 2.66%)</title><rect x="16.3" y="325" width="31.4" height="15.0" fill="rgb(230,27,45)" rx="2" ry="2" />
<text  x="19.28" y="335.5" >re..</text>
</g>
<g >
<title>post_alloc_hook (1 samples, 0.27%)</title><rect x="32.0" y="197" width="3.1" height="15.0" fill="rgb(207,45,39)" rx="2" ry="2" />
<text  x="34.97" y="207.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.27%)</title><rect x="882.4" y="133" width="3.2" height="15.0" fill="rgb(205,79,34)" rx="2" ry="2" />
<text  x="885.45" y="143.5" ></text>
</g>
<g >
<title>unmap_page_range (53 samples, 14.10%)</title><rect x="672.2" y="181" width="166.3" height="15.0" fill="rgb(208,206,52)" rx="2" ry="2" />
<text  x="675.18" y="191.5" >unmap_page_range</text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.53%)</title><rect x="662.8" y="133" width="6.2" height="15.0" fill="rgb(215,60,15)" rx="2" ry="2" />
<text  x="665.77" y="143.5" ></text>
</g>
<g >
<title>page_vma_mapped_walk (1 samples, 0.27%)</title><rect x="38.2" y="165" width="3.2" height="15.0" fill="rgb(238,129,15)" rx="2" ry="2" />
<text  x="41.24" y="175.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.27%)</title><rect x="882.4" y="165" width="3.2" height="15.0" fill="rgb(239,197,47)" rx="2" ry="2" />
<text  x="885.45" y="175.5" ></text>
</g>
<g >
<title>walk_component (2 samples, 0.53%)</title><rect x="851.1" y="197" width="6.2" height="15.0" fill="rgb(222,115,2)" rx="2" ry="2" />
<text  x="854.06" y="207.5" ></text>
</g>
<g >
<title>python3 (1 samples, 0.27%)</title><rect x="863.6" y="341" width="3.2" height="15.0" fill="rgb(218,138,13)" rx="2" ry="2" />
<text  x="866.62" y="351.5" ></text>
</g>
<g >
<title>path_lookupat (3 samples, 0.80%)</title><rect x="847.9" y="213" width="9.4" height="15.0" fill="rgb(246,130,37)" rx="2" ry="2" />
<text  x="850.93" y="223.5" ></text>
</g>
<g >
<title>ext4_iomap_begin (1 samples, 0.27%)</title><rect x="13.1" y="165" width="3.2" height="15.0" fill="rgb(210,217,19)" rx="2" ry="2" />
<text  x="16.14" y="175.5" ></text>
</g>
<g >
<title>ext4_find_extent (1 samples, 0.27%)</title><rect x="13.1" y="117" width="3.2" height="15.0" fill="rgb(238,107,13)" rx="2" ry="2" />
<text  x="16.14" y="127.5" ></text>
</g>
<g >
<title>native_flush_tlb_multi (2 samples, 0.53%)</title><rect x="41.4" y="133" width="6.3" height="15.0" fill="rgb(213,203,21)" rx="2" ry="2" />
<text  x="44.38" y="143.5" ></text>
</g>
<g >
<title>do_idle (93 samples, 24.73%)</title><rect x="866.8" y="277" width="291.8" height="15.0" fill="rgb(240,27,18)" rx="2" ry="2" />
<text  x="869.76" y="287.5" >do_idle</text>
</g>
<g >
<title>rmap_walk (3 samples, 0.80%)</title><rect x="38.2" y="213" width="9.5" height="15.0" fill="rgb(248,90,4)" rx="2" ry="2" />
<text  x="41.24" y="223.5" ></text>
</g>
<g >
<title>__free_one_page (1 samples, 0.27%)</title><rect x="656.5" y="69" width="3.1" height="15.0" fill="rgb(253,199,37)" rx="2" ry="2" />
<text  x="659.49" y="79.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (1 samples, 0.27%)</title><rect x="1155.5" y="245" width="3.1" height="15.0" fill="rgb(213,45,13)" rx="2" ry="2" />
<text  x="1158.48" y="255.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.53%)</title><rect x="832.2" y="165" width="6.3" height="15.0" fill="rgb(227,161,2)" rx="2" ry="2" />
<text  x="835.23" y="175.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.53%)</title><rect x="662.8" y="165" width="6.2" height="15.0" fill="rgb(244,91,51)" rx="2" ry="2" />
<text  x="665.77" y="175.5" ></text>
</g>
<g >
<title>__set_task_blocked (1 samples, 0.27%)</title><rect x="863.6" y="261" width="3.2" height="15.0" fill="rgb(221,212,20)" rx="2" ry="2" />
<text  x="866.62" y="271.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.27%)</title><rect x="1183.7" y="213" width="3.2" height="15.0" fill="rgb(225,24,37)" rx="2" ry="2" />
<text  x="1186.72" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.80%)</title><rect x="1174.3" y="325" width="9.4" height="15.0" fill="rgb(250,24,26)" rx="2" ry="2" />
<text  x="1177.31" y="335.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.27%)</title><rect x="879.3" y="149" width="3.1" height="15.0" fill="rgb(214,15,19)" rx="2" ry="2" />
<text  x="882.31" y="159.5" ></text>
</g>
<g >
<title>migrate_pages (9 samples, 2.39%)</title><rect x="19.4" y="245" width="28.3" height="15.0" fill="rgb(242,116,41)" rx="2" ry="2" />
<text  x="22.41" y="255.5" >m..</text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.27%)</title><rect x="1183.7" y="245" width="3.2" height="15.0" fill="rgb(208,142,13)" rx="2" ry="2" />
<text  x="1186.72" y="255.5" ></text>
</g>
<g >
<title>task_numa_find_cpu (1 samples, 0.27%)</title><rect x="1180.6" y="213" width="3.1" height="15.0" fill="rgb(224,6,35)" rx="2" ry="2" />
<text  x="1183.59" y="223.5" ></text>
</g>
<g >
<title>make_kuid (1 samples, 0.27%)</title><rect x="844.8" y="197" width="3.1" height="15.0" fill="rgb(227,92,15)" rx="2" ry="2" />
<text  x="847.79" y="207.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.27%)</title><rect x="882.4" y="37" width="3.2" height="15.0" fill="rgb(229,60,2)" rx="2" ry="2" />
<text  x="885.45" y="47.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.27%)</title><rect x="28.8" y="165" width="3.2" height="15.0" fill="rgb(246,93,7)" rx="2" ry="2" />
<text  x="31.83" y="175.5" ></text>
</g>
<g >
<title>perf (192 samples, 51.06%)</title><rect x="47.7" y="341" width="602.5" height="15.0" fill="rgb(238,115,40)" rx="2" ry="2" />
<text  x="50.66" y="351.5" >perf</text>
</g>
<g >
<title>x86_64_start_reservations (5 samples, 1.33%)</title><rect x="1158.6" y="293" width="15.7" height="15.0" fill="rgb(250,97,16)" rx="2" ry="2" />
<text  x="1161.62" y="303.5" ></text>
</g>
<g >
<title>free_pgtables (3 samples, 0.80%)</title><rect x="653.4" y="213" width="9.4" height="15.0" fill="rgb(223,167,52)" rx="2" ry="2" />
<text  x="656.35" y="223.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.80%)</title><rect x="653.4" y="149" width="9.4" height="15.0" fill="rgb(234,196,7)" rx="2" ry="2" />
<text  x="656.35" y="159.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.53%)</title><rect x="41.4" y="149" width="6.3" height="15.0" fill="rgb(227,81,40)" rx="2" ry="2" />
<text  x="44.38" y="159.5" ></text>
</g>
<g >
<title>kthread (10 samples, 2.66%)</title><rect x="16.3" y="309" width="31.4" height="15.0" fill="rgb(219,66,4)" rx="2" ry="2" />
<text  x="19.28" y="319.5" >kt..</text>
</g>
<g >
<title>try_to_migrate_one (3 samples, 0.80%)</title><rect x="38.2" y="181" width="9.5" height="15.0" fill="rgb(226,7,29)" rx="2" ry="2" />
<text  x="41.24" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="863.6" y="309" width="3.2" height="15.0" fill="rgb(218,183,1)" rx="2" ry="2" />
<text  x="866.62" y="319.5" ></text>
</g>
<g >
<title>free_pgd_range (3 samples, 0.80%)</title><rect x="653.4" y="197" width="9.4" height="15.0" fill="rgb(252,195,3)" rx="2" ry="2" />
<text  x="656.35" y="207.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.27%)</title><rect x="25.7" y="181" width="3.1" height="15.0" fill="rgb(214,95,38)" rx="2" ry="2" />
<text  x="28.69" y="191.5" ></text>
</g>
<g >
<title>tclsh8.6 (5 samples, 1.33%)</title><rect x="1174.3" y="341" width="15.7" height="15.0" fill="rgb(238,20,11)" rx="2" ry="2" />
<text  x="1177.31" y="351.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.27%)</title><rect x="876.2" y="117" width="3.1" height="15.0" fill="rgb(226,111,8)" rx="2" ry="2" />
<text  x="879.17" y="127.5" ></text>
</g>
<g >
<title>isolate_migratepages_block (1 samples, 0.27%)</title><rect x="16.3" y="245" width="3.1" height="15.0" fill="rgb(248,69,31)" rx="2" ry="2" />
<text  x="19.28" y="255.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (1 samples, 0.27%)</title><rect x="844.8" y="229" width="3.1" height="15.0" fill="rgb(237,204,39)" rx="2" ry="2" />
<text  x="847.79" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter (92 samples, 24.47%)</title><rect x="866.8" y="261" width="288.7" height="15.0" fill="rgb(245,66,30)" rx="2" ry="2" />
<text  x="869.76" y="271.5" >cpuidle_enter</text>
</g>
<g >
<title>rcu_qs (1 samples, 0.27%)</title><rect x="1171.2" y="165" width="3.1" height="15.0" fill="rgb(241,67,31)" rx="2" ry="2" />
<text  x="1174.17" y="175.5" ></text>
</g>
<g >
<title>iomap_bmap (1 samples, 0.27%)</title><rect x="13.1" y="197" width="3.2" height="15.0" fill="rgb(232,78,20)" rx="2" ry="2" />
<text  x="16.14" y="207.5" ></text>
</g>
</g>
</svg>
